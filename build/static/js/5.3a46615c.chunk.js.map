{"version":3,"sources":["assets/images/cc3po-logo.png","component/Navbar/Scrollspy.js","component/Navbar/NavBar.js"],"names":["scrollSpy","props","scrollSection","scrollSectionOffsetTop","scrollTargetIds","forEach","sectionID","index","document","getElementById","offsetTop","headerBackground","querySelector","scrollHeight","window","pageYOffset","getNavLinkElement","classList","add","activeNavClass","parentNode","clearOtherNavLinkActiveStyle","remove","innerHeight","body","length","scrollDuration","Number","router","homeDefaultLink","hashIdentifier","bind","current_time","start","change","duration","to","currentTime","animateScroll","val","easeInOutQuad","scrollTo","setTimeout","this","navHref","includes","replace","addEventListener","event","preventDefault","location","hash","querySelectorAll","navLink","getNavToSectionID","getAttribute","scrollTargetPosition","removeEventListener","excludeSectionID","className","children","Component","NavbarPage","state","isOpenMenu","targetId","navItems","map","item","idnm","Fragment","Navbar","expand","fixed","top","navClass","id","Container","imglight","src","logolight","alt","height","NavbarToggler","onClick","toggle","Collapse","isOpen","Scrollspy","Nav","key","NavItem","navheading","NavLink","href","icon"],"mappings":"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","file":"static/js/5.3a46615c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cc3po-logo.c7077a12.png\";","import React, { Component } from 'react';\r\n\r\nclass scrollSpy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props = props;\r\n        this.scrollTargetIds = this.props.scrollTargetIds;\r\n        this.activeNavClass = this.props.activeNavClass;\r\n        this.scrollDuration = Number(this.props.scrollDuration) || 1000;\r\n        this.headerBackground = this.props.headerBackground === \"true\" ? true : false;\r\n\r\n        if (this.props.router && this.props.router === \"HashRouter\") {\r\n            this.homeDefaultLink = \"#/\";\r\n            this.hashIdentifier = \"#/#\";\r\n        } else {\r\n            this.homeDefaultLink = \"/\";\r\n            this.hashIdentifier = \"#\";\r\n        }\r\n        this.scrollSection.bind(this);\r\n    }\r\n\r\n    easeInOutQuad(current_time, start, change, duration) {\r\n        current_time /= duration / 2;\r\n        if (current_time < 1) return change / 2 * current_time * current_time + start;\r\n        current_time--;\r\n        return -change / 2 * (current_time * (current_time - 2) - 1) + start;\r\n    };\r\n\r\n    scrollTo(start, to, duration) {\r\n        let change = to - start,\r\n            currentTime = 0,\r\n            increment = 10;\r\n\r\n        let animateScroll = () => {\r\n            currentTime += increment;\r\n            let val = this.easeInOutQuad(currentTime, start, change, duration);\r\n            window.scrollTo(0, val);\r\n            if (currentTime < duration) {\r\n                setTimeout(animateScroll, increment);\r\n            }\r\n        };\r\n\r\n        animateScroll();\r\n    }\r\n\r\n    getNavLinkElement(sectionID) {\r\n        return document.querySelector(`a[href='${this.hashIdentifier}${sectionID}']`);\r\n    }\r\n\r\n    getNavToSectionID(navHref) {\r\n        return navHref.includes(this.hashIdentifier) ? navHref.replace(this.hashIdentifier, \"\") : \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (document.querySelector(`a[href='${this.homeDefaultLink}']`)) {\r\n            document.querySelector(`a[href='${this.homeDefaultLink}']`).addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                this.scrollTo(window.pageYOffset, 0, this.scrollDuration);\r\n                window.location.hash = \"\";\r\n            });\r\n        }\r\n\r\n        document.querySelector(\"div[data-nav='list']\").querySelectorAll(\"a\").forEach((navLink) => {\r\n            navLink.addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                let sectionID = this.getNavToSectionID(navLink.getAttribute(\"href\"));\r\n\r\n                if (sectionID) {\r\n                    let scrollTargetPosition = document.getElementById(sectionID).offsetTop - (this.headerBackground ? document.querySelector(\"div[data-nav='list']\").scrollHeight : 0);\r\n                    this.scrollTo(window.pageYOffset, scrollTargetPosition, this.scrollDuration);\r\n                } else {\r\n                    this.scrollTo(window.pageYOffset, 0, this.scrollDuration);\r\n                }\r\n            });\r\n        })\r\n\r\n        window.addEventListener(\"scroll\", this.scrollSection, true );\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"scroll\", this.scrollSection, true );\r\n    }\r\n    \r\n    scrollSection = () => {\r\n            let scrollSectionOffsetTop;\r\n            this.scrollTargetIds.forEach((sectionID, index) => {\r\n                scrollSectionOffsetTop = document.getElementById(sectionID).offsetTop - (this.headerBackground ? document.querySelector(\"div[data-nav='list']\").scrollHeight : 0);\r\n\r\n                if (window.pageYOffset >= scrollSectionOffsetTop && window.pageYOffset < scrollSectionOffsetTop + document.getElementById(sectionID).scrollHeight) {\r\n                    this.getNavLinkElement(sectionID).classList.add(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.add(this.activeNavClass);\r\n                    this.clearOtherNavLinkActiveStyle(sectionID)\r\n                } else {\r\n                    this.getNavLinkElement(sectionID).classList.remove(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.remove(this.activeNavClass);\r\n                }\r\n\r\n                if (window.innerHeight + window.pageYOffset >= document.body.scrollHeight && index === this.scrollTargetIds.length - 1) {\r\n                    this.getNavLinkElement(sectionID).classList.add(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.add(this.activeNavClass);\r\n                    this.clearOtherNavLinkActiveStyle(sectionID);\r\n                }\r\n            });\r\n    }\r\n    clearOtherNavLinkActiveStyle(excludeSectionID) {\r\n        this.scrollTargetIds.forEach((sectionID, index) => {\r\n            if (sectionID !== excludeSectionID) {\r\n                this.getNavLinkElement(sectionID).classList.remove(this.activeNavClass);\r\n                this.getNavLinkElement(sectionID).parentNode.classList.remove(this.activeNavClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div data-nav=\"list\" className={this.props.className}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default scrollSpy;","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n  Collapse,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Import Logo\r\nimport logodark from \"../../assets/images/cc3po-logo.png\";\r\nimport logolight from \"../../assets/images/cc3po-logo.png\";\r\n\r\n//import icon\r\nimport FeatherIcon from \"feather-icons-react\";\r\n\r\nimport ScrollspyNav from \"./Scrollspy\";\r\n\r\nclass NavbarPage extends Component {\r\n  // render() {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpenMenu: false,\r\n    };\r\n  }\r\n  render() {\r\n    let targetId = this.props.navItems.map((item) => {\r\n      return item.idnm;\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          expand=\"lg\"\r\n          fixed={this.props.top === true ? \"top\" : \"\"}\r\n          className={this.props.navClass + \" fixed-top navbar-custom sticky sticky-dark align-items-center\"}\r\n          id=\"navbar\"\r\n        >\r\n          <Container>\r\n          {/* LOGO */}\r\n            <Link className=\"logo mr-3\" to=\"/\">\r\n              {this.props.imglight === true ? (\r\n                <img src={logolight} alt=\"\" height=\"26\" />\r\n              ) : (\r\n                <img src={logodark} alt=\"\" height=\"26\" />\r\n              )}\r\n            </Link>\r\n            <NavbarToggler onClick={this.toggle}>\r\n              <span className=\"ti-menu\"></span>\r\n            </NavbarToggler>\r\n            <Collapse\r\n              id=\"navbarCollapse\"\r\n              isOpen={this.state.isOpenMenu}\r\n              className=\" navbar-collapse\"\r\n            >\r\n              <ScrollspyNav\r\n                scrollTargetIds={targetId}\r\n                scrollDuration=\"800\"\r\n                headerBackground=\"true\"\r\n                activeNavClass=\"active\"\r\n                className=\"navbar-collapse\"\r\n              >\r\n                <Nav className=\"navbar-nav navbar-center\" id=\"navbar-navlist\">\r\n                  {this.props.navItems.map((item, key) => (\r\n                    <NavItem\r\n                      key={key}\r\n                      className={item.navheading === \"Home\" ? \"active\" : \"\"}\r\n                    >\r\n                      <NavLink\r\n                        className={item.navheading === \"Home\" ? \"active\" : \"\"}\r\n                        href={\"#\" + item.idnm}\r\n                      >\r\n                        {item.navheading}\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  ))}\r\n                </Nav>\r\n                <ul className=\"list-inline ml-auto menu-social-icon mb-0 py-2 py-lg-0\">\r\n                    <li className=\"list-inline-item ml-0\">\r\n                        <Link to=\"#\" className=\"menu-social-link\"><FeatherIcon icon=\"facebook\" className=\"icon-xs sw_1-5\"  /></Link>\r\n                    </li>{\" \"}\r\n                    <li className=\"list-inline-item\">\r\n                      <Link to=\"#\" className=\"menu-social-link\"><FeatherIcon icon=\"twitter\" className=\"icon-xs sw_1-5\"  /></Link>\r\n                    </li>{\" \"}\r\n                    <li className=\"list-inline-item\">\r\n                    <Link to=\"#\" className=\"menu-social-link\"><FeatherIcon icon=\"instagram\" className=\"icon-xs sw_1-5\"  /></Link>\r\n                    </li>{\" \"}\r\n                    <li className=\"list-inline-item mr-0\">\r\n                    <Link to=\"#\" className=\"menu-social-link\"><FeatherIcon icon=\"linkedin\" className=\"icon-xs sw_1-5\"  /></Link>\r\n                    </li>\r\n                </ul>\r\n              </ScrollspyNav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n// }\r\nexport default NavbarPage;"],"sourceRoot":""}